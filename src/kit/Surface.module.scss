@use 'sass:map';

$levels-light: (
  0: mix(black, white, 0%),
  1: mix(black, white, 4%),
  2: mix(black, white, 8%),
  3: mix(black, white, 12%),
  4: mix(black, white, 16%),
);
$level-highlights-light: (
  0: #ececec,
  1: #f5f5f5,
  2: #f8f8f8,
  3: #f8f8f8,
  4: #f8f8f8,
);
$levels-dark: (
  0: mix(white, black, 0%),
  1: mix(white, black, 4%),
  2: mix(white, black, 8%),
  3: mix(white, black, 12%),
  4: mix(white, black, 16%),
);

$level-highlights-dark: (
  0: #212121,
  1: #323232,
  2: #303030,
  3: #303030,
  4: #303030,
);

@mixin surface($level: 1, $is-light: true) {
  @if $is-light {
    background-color: map.get($levels-light, $level);

    &.border {
      border: var(--theme-stroke-width) solid --border-color;
    }
    &.hover {
      &:hover {
        background-color: map.get($level-highlights-light, $level);
      }
    }
  } @else {
    background-color: map.get($levels-dark, $level);

    &.border {
      border: var(--theme-stroke-width) solid --border-color;
    }
    &.hover {
      &:hover {
        background-color: map.get($level-highlights-dark, $level);
      }
    }
  }
}
@mixin nesting($is-light: true) {
  @include surface(1, $is-light);
  .base {
    @include surface(2, $is-light);
    .base {
      @include surface(3, $is-light);
      .base {
        @include surface(4, $is-light);
      }
    }
  }
  &.zero {
    @include surface(0, $is-light);
    .base {
      @include surface(1, $is-light);
      .base {
        @include surface(2, $is-light);
        .base {
          @include surface(3, $is-light);
          .base {
            @include surface(4, $is-light);
          }
        }
      }
    }
  }
  &.one {
    @include surface(1, $is-light);
    .base {
      @include surface(2, $is-light);
      .base {
        @include surface(3, $is-light);
        .base {
          @include surface(4, $is-light);
        }
      }
    }
  }
  &.two {
    @include surface(2, $is-light);
    .base {
      @include surface(3, $is-light);
      .base {
        @include surface(4, $is-light);
      }
    }
  }
  &.three {
    @include surface(3, $is-light);
    .base {
      @include surface(4, $is-light);
    }
  }
  &.four {
    @include surface(4, $is-light);
    .base {
      @include surface(4, $is-light);
    }
  }
}
.base {
  --border-color: #e2e2e2;
  @include nesting;

  &.light {
    --border-color: #e2e2e2;
    @include nesting(true);
  }
  &.dark {
    --border-color: #323232;
    @include nesting(false);
  }
}
